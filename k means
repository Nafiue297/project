import numpy as np

class KMeans:
    def __init__(self, k=3, max_iters=100):
        self.k = k
        self.max_iters = max_iters

    def fit(self, data):
        self.centroids = data[np.random.choice(len(data), self.k, replace=False)]
        for _ in range(self.max_iters):
            self.labels_ = [self.closest_centroid(x) for x in data]
            new_centroids = np.array([data[np.array(self.labels_) == j].mean(axis=0) for j in range(self.k)])
            if np.allclose(self.centroids, new_centroids):
                break
            self.centroids = new_centroids

    def closest_centroid(self, point):
        return np.argmin([np.linalg.norm(point - c) for c in self.centroids])
